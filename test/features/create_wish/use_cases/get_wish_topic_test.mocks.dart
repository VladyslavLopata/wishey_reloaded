// Mocks generated by Mockito 5.0.17 from annotations
// in wishey/test/features/create_wish/use_cases/get_wish_topic_test.dart.
// Do not manually edit this file.

import 'package:mockito/mockito.dart' as _i1;
import 'package:wishey/core/models/wish_list.dart' as _i2;
import 'package:wishey/features/create_wish/repositories/forms_state_repository.dart'
    as _i3;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeWish_0 extends _i1.Fake implements _i2.Wish {}

/// A class which mocks [FormsStateRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockFormsStateRepository extends _i1.Mock
    implements _i3.FormsStateRepository {
  MockFormsStateRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Wish get currentWish =>
      (super.noSuchMethod(Invocation.getter(#currentWish),
          returnValue: _FakeWish_0()) as _i2.Wish);
  @override
  _i2.Wish get initialWish =>
      (super.noSuchMethod(Invocation.getter(#initialWish),
          returnValue: _FakeWish_0()) as _i2.Wish);
  @override
  set currentWish(_i2.Wish? wish) =>
      super.noSuchMethod(Invocation.setter(#currentWish, wish),
          returnValueForMissingStub: null);
  @override
  void discardWish() => super.noSuchMethod(Invocation.method(#discardWish, []),
      returnValueForMissingStub: null);
  @override
  void initWish(_i2.Wish? initialWish) =>
      super.noSuchMethod(Invocation.method(#initWish, [initialWish]),
          returnValueForMissingStub: null);
}
